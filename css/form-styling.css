.form-group .input-group {
  margin-bottom: 15px;
}
/* input styling */
.form-group .form-control {
  padding: 10px;
  transition: all 0.2s ease-in-out;
  font-size: 16px;
  width: 100%;
}

/* The label should be absolute so that it can be dynamicaly placed on the border of input.
   This should have a smooth transition. */
.form-group .label-control {
  position: absolute;
  background: white;
  color: lightgray;
  transition: all 0.2s ease-in-out;
  margin-left: 10px;
  margin-top: -12px;
}
/* When the label control is set with this class, it will be placed over the border of input. */
.label-over {
  top: 0px;
  padding: 3px 5px;
  font-size: 13px;
}
/* When the label is set with this class, it will be placed inside the input. */
.label-under {
  top: 45%;
  padding: 3px;
  font-size: 16px;
  color: gray;
}

/* Form wrapper is the div containing the input and label inside. */
.form-wrapper {
  position: relative;
}
/* Validation feedback default styling */
.validation-feedback {
  font-size: 14px;
  padding: 5px;
  margin-bottom: 10px;
}

/* The error messages intially should be invisible and colored red. */
.validation-feedback .error-empty, .error-invalid {
  color: red;
  display:none;
}

/* Default styling of assist info */
.validation-feedback .assist-valid {
  color: lightgray;
}


/* When the form-control has focus then change the color of label. */
.input-group .form-control:focus + .label-control {
  color: skyblue;
}

/* When the input-group is set with invalid change the
form-control border color to red. */
.invalid .form-control {
border-color: red ;
}

/* When focused the form-control inside invalid make border
  thick. */
.invalid .form-control:focus {
  border: 2px solid red;
}

/* the label-control inside invalid should be displayed red. */
.invalid .label-control {
  color: red !important;
}

/* The assist info will be always be none in case of invalid. */
.invalid .assist-valid{
  display: none;
}

/* For blocking user operation until the invoked operation completes. */
.busy {
  background-color: #f3f3f3;
  color: black;
  cursor: not-allowed !important;
}

.busy:hover{
  background-color: #f3f3f3 !important;
  color: black !important;
}